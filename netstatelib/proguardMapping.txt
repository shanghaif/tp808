# compiler: R8
# compiler_version: 1.4.94
# min_api: 1
net.rayton.netstatelib.BuildConfig -> a.a.a.a:
    java.lang.String VERSION_NAME -> f
    int VERSION_CODE -> e
    boolean DEBUG -> a
    java.lang.String BUILD_TYPE -> c
    java.lang.String APPLICATION_ID -> b
    java.lang.String FLAVOR -> d
    1:1:void <init>():6:6 -> <init>
net.rayton.netstatelib.NetStateUtils -> a.a.a.b:
    1:1:void <init>():11:11 -> <init>
    1:1:int getAPNType(android.content.Context):23:23 -> a
    2:2:int getAPNType(android.content.Context):26:26 -> a
    3:3:int getAPNType(android.content.Context):32:32 -> a
    4:4:int getAPNType(android.content.Context):37:37 -> a
    5:5:int getAPNType(android.content.Context):39:39 -> a
    6:6:int getAPNType(android.content.Context):42:42 -> a
    7:7:int getAPNType(android.content.Context):47:47 -> a
    8:8:int getAPNType(android.content.Context):53:53 -> a
net.rayton.netstatelib.NetWorkMonitorManager -> net.rayton.netstatelib.NetWorkMonitorManager:
    android.app.Application application -> d
    android.content.BroadcastReceiver receiver -> f
    android.net.ConnectivityManager$NetworkCallback networkCallback -> g
    net.rayton.netstatelib.NetWorkMonitorManager ourInstance -> b
    java.lang.String TAG -> a
    java.lang.String ANDROID_NET_CHANGE_ACTION -> c
    java.util.Map netWorkStateChangedMethodMap -> e
    1:1:void <init>():45:45 -> <init>
    2:2:void <init>():43:43 -> <init>
    3:3:void <init>():203:203 -> <init>
    4:4:void <init>():227:227 -> <init>
    1:1:void access$000(net.rayton.netstatelib.NetWorkMonitorManager,net.rayton.netstatelib.NetWorkState):26:26 -> a
    2:2:android.app.Application access$100(net.rayton.netstatelib.NetWorkMonitorManager):26:26 -> a
    3:3:void initMonitor():65:65 -> a
    4:5:void initMonitor():67:68 -> a
    6:8:void initMonitor():70:72 -> a
    9:11:void initMonitor():74:76 -> a
    12:17:void postNetState(net.rayton.netstatelib.NetWorkState):123:128 -> a
    18:19:void invokeMethod(net.rayton.netstatelib.NetWorkStateReceiverMethod,net.rayton.netstatelib.NetWorkState):141:142 -> a
    20:20:void invokeMethod(net.rayton.netstatelib.NetWorkStateReceiverMethod,net.rayton.netstatelib.NetWorkState):144:144 -> a
    21:21:void invokeMethod(net.rayton.netstatelib.NetWorkStateReceiverMethod,net.rayton.netstatelib.NetWorkState):152:152 -> a
    22:22:void invokeMethod(net.rayton.netstatelib.NetWorkStateReceiverMethod,net.rayton.netstatelib.NetWorkState):150:150 -> a
    23:23:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):166:166 -> a
    24:25:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):168:169 -> a
    26:27:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):171:172 -> a
    28:29:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):177:178 -> a
    30:30:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):182:182 -> a
    31:32:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):184:185 -> a
    33:34:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):188:189 -> a
    35:36:net.rayton.netstatelib.NetWorkStateReceiverMethod findMethod(java.lang.Object):191:192 -> a
    1:2:void onDestroy():84:85 -> b
    1:3:net.rayton.netstatelib.NetWorkMonitorManager getInstance():32:34 -> getInstance
    4:5:net.rayton.netstatelib.NetWorkMonitorManager getInstance():36:37 -> getInstance
    6:6:net.rayton.netstatelib.NetWorkMonitorManager getInstance():36:36 -> getInstance
    1:2:void init(android.app.Application):57:58 -> init
    3:3:void init(android.app.Application):55:55 -> init
    1:1:void register(java.lang.Object):94:94 -> register
    2:2:void register(java.lang.Object):98:98 -> register
    3:3:void register(java.lang.Object):100:100 -> register
    4:4:void register(java.lang.Object):95:95 -> register
    1:2:void unregister(java.lang.Object):113:114 -> unregister
net.rayton.netstatelib.NetWorkMonitorManager$1 -> a.a.a.c:
    net.rayton.netstatelib.NetWorkMonitorManager this$0 -> a
    1:1:void <init>(net.rayton.netstatelib.NetWorkMonitorManager):203:203 -> <init>
    1:1:void onReceive(android.content.Context,android.content.Intent):206:206 -> onReceive
    2:3:void onReceive(android.content.Context,android.content.Intent):208:209 -> onReceive
    4:4:void onReceive(android.content.Context,android.content.Intent):218:218 -> onReceive
    5:5:void onReceive(android.content.Context,android.content.Intent):215:215 -> onReceive
    6:6:void onReceive(android.content.Context,android.content.Intent):221:221 -> onReceive
net.rayton.netstatelib.NetWorkMonitorManager$2 -> a.a.a.d:
    net.rayton.netstatelib.NetWorkMonitorManager this$0 -> a
    1:1:void <init>(net.rayton.netstatelib.NetWorkMonitorManager):227:227 -> <init>
    1:3:void onAvailable(android.net.Network):233:235 -> onAvailable
    4:4:void onAvailable(android.net.Network):244:244 -> onAvailable
    5:5:void onAvailable(android.net.Network):241:241 -> onAvailable
    6:6:void onAvailable(android.net.Network):247:247 -> onAvailable
    1:1:void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities):274:274 -> onCapabilitiesChanged
    1:1:void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties):284:284 -> onLinkPropertiesChanged
    1:1:void onLosing(android.net.Network,int):264:264 -> onLosing
    1:2:void onLost(android.net.Network):255:256 -> onLost
    1:1:void onUnavailable():292:292 -> onUnavailable
net.rayton.netstatelib.NetWorkState -> net.rayton.netstatelib.NetWorkState:
    1:3:void <clinit>():8:10 -> <clinit>
    4:4:void <clinit>():7:7 -> <clinit>
    1:1:void <init>(java.lang.String,int):7:7 -> <init>
    1:1:net.rayton.netstatelib.NetWorkState valueOf(java.lang.String):7:7 -> valueOf
    1:1:net.rayton.netstatelib.NetWorkState[] values():7:7 -> values
net.rayton.netstatelib.NetWorkStateReceiverMethod -> a.a.a.e:
    net.rayton.netstatelib.NetWorkState[] netWorkState -> c
    java.lang.Object object -> b
    java.lang.reflect.Method method -> a
    1:1:void <init>():10:10 -> <init>
    2:2:void <init>():22:22 -> <init>
    1:1:java.lang.reflect.Method getMethod():25:25 -> a
    2:2:void setMethod(java.lang.reflect.Method):29:29 -> a
    3:3:void setObject(java.lang.Object):37:37 -> a
    4:4:void setNetWorkState(net.rayton.netstatelib.NetWorkState[]):45:45 -> a
    1:1:net.rayton.netstatelib.NetWorkState[] getNetWorkState():41:41 -> b
    1:1:java.lang.Object getObject():33:33 -> c
net.rayton.phonestatelib.MyPhoneStateListener -> net.rayton.phonestatelib.MyPhoneStateListener:
    android.telephony.TelephonyManager telephonyManager -> a
    net.rayton.phonestatelib.MyPhoneStateListener$PhoneListener listener -> c
    net.rayton.phonestatelib.MyPhoneStateListener instance -> b
    1:1:void <init>():7:7 -> <init>
    1:2:void init(android.content.Context):23:24 -> a
    1:3:net.rayton.phonestatelib.MyPhoneStateListener getInstance():13:15 -> getInstance
    4:5:net.rayton.phonestatelib.MyPhoneStateListener getInstance():17:18 -> getInstance
    6:6:net.rayton.phonestatelib.MyPhoneStateListener getInstance():17:17 -> getInstance
    1:1:void onCallStateChanged(int,java.lang.String):34:34 -> onCallStateChanged
    2:2:void onCallStateChanged(int,java.lang.String):50:50 -> onCallStateChanged
    3:3:void onCallStateChanged(int,java.lang.String):47:47 -> onCallStateChanged
    4:4:void onCallStateChanged(int,java.lang.String):41:41 -> onCallStateChanged
    1:1:void setListener(net.rayton.phonestatelib.MyPhoneStateListener$PhoneListener):28:28 -> setListener

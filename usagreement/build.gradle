apply plugin: 'com.android.library'

android {
    compileSdkVersion 25


    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
//            shrinkResources true  //  去除无效资源，依赖 minifyEnabled
            zipAlignEnabled true    //  zip优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

    task makeJar(type: Copy) {
        //删除存在的
        delete "build/libs/"
        //设置拷贝的文件
        from('build/intermediates/packaged-classes/release/')
        //打进jar包后的文件目录
        into('build/libs/')
        //将classes.jar放入build/libs/目录下
        //include ,exclude参数来设置过滤
        //（我们只关心classes.jar这个文件）
        include('classes.jar')
        //重命名
        rename ('classes.jar', "usagreement_${defaultConfig.versionCode}.jar")
    }

    makeJar.dependsOn(build)

}
configurations.all{
    resolutionStrategy {
        force 'com.android.support:support-annotations:27.1.1'
    }}

dependencies {
//    implementation fileTree(include: ['*.jar'], dir: 'libs')
//    implementation 'com.android.support:appcompat-v7:25.2.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

//    testImplementation 'junit:junit:4.12'
    compileOnly 'junit:junit:4.12'
//    api group: 'io.netty', name: 'netty-all', version: '4.1.9.Final'
    compileOnly group: 'com.alibaba', name: 'fastjson', version: '1.2.9'
//    api 'com.android.support:multidex:1.0.2'
    compileOnly files('libs/protocol-1.3.jar')
}
